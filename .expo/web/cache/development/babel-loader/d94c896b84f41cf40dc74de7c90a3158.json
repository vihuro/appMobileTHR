{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport api from \"../../Services/api\";\nimport 'localstorage-polyfill';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    usuario = _useState2[0],\n    setUsuario = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  var logar = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.warn(navigation);\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: \"Menu\"\n        }]\n      });\n      var login = {\n        'apelido': usuario,\n        'senha': senha\n      };\n      yield api.post('/login', login).then(function (response) {\n        return alert(JSON.stringify(response.data));\n      }).catch(function (error) {\n        if (error.response.data) {\n          alert(error.response.data);\n        } else {\n          console.log(error);\n        }\n      });\n    });\n    return function logar() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.iconLogo,\n      source: require(\"../../assets/logomarcaAzul.png\")\n    }), _jsxs(View, {\n      style: styles.wrapLogin,\n      children: [_jsx(Text, {\n        style: styles.infoUser,\n        children: \"Usu\\xE1rio:\"\n      }), _jsx(View, {\n        style: styles.containerInput,\n        children: _jsx(TextInput, {\n          value: usuario,\n          onChangeText: function onChangeText(e) {\n            return setUsuario(e);\n          },\n          style: styles.input\n        })\n      }), _jsx(Text, {\n        style: styles.infoUser,\n        children: \"Senha:\"\n      }), _jsx(View, {\n        style: styles.containerInput,\n        children: _jsx(TextInput, {\n          secureTextEntry: true,\n          value: senha,\n          onChangeText: function onChangeText(e) {\n            return setSenha(e);\n          },\n          style: styles.input\n        })\n      }), _jsx(TouchableHighlight, {\n        underlayColor: \"#F5F3FF\",\n        style: styles.button,\n        onPress: function onPress() {\n          logar();\n        },\n        children: _jsx(Text, {\n          children: \"ENTRAR\"\n        })\n      })]\n    }), _jsx(StatusBar, {\n      translucent: false,\n      backgroundColor: \"#0000ae\",\n      style: \"light\"\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","StatusBar","api","styles","Login","navigation","usuario","setUsuario","senha","setSenha","logar","console","warn","reset","index","routes","name","login","post","then","response","alert","JSON","stringify","data","catch","error","log","container","iconLogo","require","wrapLogin","infoUser","containerInput","e","input","button"],"sources":["C:/Users/thr/Desktop/TesteNodeApi/AppThr/pages/login/Login.js"],"sourcesContent":["import React , { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\nimport { Button, Text, TextInput, TouchableHighlight ,View, Image } from 'react-native';\r\nimport api from '../../Services/api'\r\nimport 'localstorage-polyfill';\r\nimport styles from './styles'\r\n\r\n\r\nconst Login = ({navigation}) => {\r\n\r\n    const [usuario, setUsuario] = useState('');\r\n    const [senha , setSenha] = useState('');\r\n  \r\n    const logar = async () =>{\r\n      console.warn(navigation)\r\n      navigation.reset({\r\n        index:0,\r\n        routes:[{name:\"Menu\"}]\r\n      })\r\n      const login = {\r\n        'apelido': usuario,\r\n        'senha':senha\r\n      };\r\n      await api.post('/login',login)\r\n      .then(response => alert(JSON.stringify(response.data)))\r\n      .catch(error => {\r\n              if(error.response.data){\r\n                alert(error.response.data)\r\n              }\r\n              else{\r\n                console.log(error)\r\n              }\r\n  \r\n            });\r\n      }\r\n\r\n    return(\r\n\r\n            <View style={styles.container}>\r\n                <Image style={styles.iconLogo} source={require('../../assets/logomarcaAzul.png')}/>\r\n                <View style={styles.wrapLogin}>\r\n                    <Text style={styles.infoUser}>Usu√°rio:</Text>\r\n                    <View style={styles.containerInput}>\r\n                        <TextInput value={usuario} onChangeText={e => setUsuario(e)} style={styles.input}/>\r\n                    </View>\r\n                    <Text style={styles.infoUser}>Senha:</Text>\r\n                    <View style={styles.containerInput}>\r\n                        <TextInput secureTextEntry={true} value={senha} onChangeText={(e) => setSenha(e)} style={styles.input}/>\r\n                    </View>\r\n                    <TouchableHighlight underlayColor= '#F5F3FF' style={styles.button} onPress={() =>{logar()}}> \r\n                        <Text>ENTRAR</Text>\r\n                    </TouchableHighlight>\r\n                </View>\r\n                <StatusBar translucent={false} backgroundColor=\"#0000ae\" style='light' />\r\n            </View>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}